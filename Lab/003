/*
 1.	Необходимо обернуть повторяющиеся слово в <strong> элемент. 
 * Например, строка  this is is a test должна быть преобразована в  
 * this is <strong>is</strong> a test.
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Text.RegularExpressions;

namespace Task1
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Enter text:");
            String text = Console.ReadLine();
            //создаём экземпляр Regex
            Regex newReg = new Regex(@"");
            String result = Regex.Replace(text, @"(\b(\w+?)\s)(\2)\b", "${1}<strong>${3}</strong>");

            Console.WriteLine();
            Console.WriteLine("Your text:");
            Console.WriteLine(text);
            Console.WriteLine();
            Console.WriteLine("Text after:");
            Console.WriteLine(result);
        }
    }
}






2.	Задача состоит в том, чтобы написать шаблон, который будет соответствовать датам в формате YYYY / MM / DD HH: MM (: SS). 
Год YYYY должен находится в диапазоне между 1000 и 2012 годами, а все остальное должно быть действительными числами: месяц, 
день, час, минуты и секунды, причем наличие секунд в строке не обязательно. Високосный год учитывать не нужно, но также 
предположим, что все месяцы имеют 30 дней.

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Text.RegularExpressions;

namespace Task2
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Enter text:");
            string text = Console.ReadLine();
            //создаём экземпляр Regex
            Regex newReg = new Regex(@"(((1[0-9][0-9][0-9]|200[0-9]|201[0-2])\/(0[1-9]|1[0-2])\/(0[1-9]|1[0-9]|2[0-9]|30))\s((0[1-9]|1[0-9]|2[0-4])\:(0[1-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9])))");
            //Все найденные соответствия в тексте помещаются в тип MatchCollection
            //И далее в этот объект поместить текст, в котором необходимо произвести поиск:
            MatchCollection matches = newReg.Matches(text);
            foreach (Match mat in matches)
            {
                Console.WriteLine("Значение найденного обьекта {0}", mat.Value);
            }

        }
    }
}





3.	Необходимо написать регулярное выражение, которое соответствует отформатированному числу, 
с правильными разделителями между разрядами тысяч и правильным знаком после запятой.
Оно должно соответствовать как 10,000,000.45  так и 10 000 000,45, и не должны совпадать с числами, таких как 123.456.789.

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Text.RegularExpressions;

namespace Task3
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Enter text:");
            string text = Console.ReadLine();
            //создаём экземпляр Regex
            Regex r = new Regex(@"(\d{1,3}[ ,])+\d{1,3}[,\.]?\d+");
            //Все найденные соответствия в тексте помещаются в тип MatchCollection
            //И далее в этот объект поместить текст, в котором необходимо произвести поиск:
            MatchCollection matches = r.Matches(text);
            foreach (Match mat in matches)
            {
                Console.WriteLine("Значение найденного обьекта {0}", mat.Value);
            }
        }
    }
}
