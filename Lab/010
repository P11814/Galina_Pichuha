//задание 1
//в файле массив целых чисел записывается не корректно. по заданию надо
// с новой строки  двумерный массив  целых чисел, записанных в одну строку.
//также размерность массивов должна храниться в файле просто в виде чисел, сопутствующий текст надо добавлять
//только после считывания при выводе в консоль. И записывать так же
/*
Чтение и запись в файл.
Написать приложение, позволяющее:
•	создать новый файл с именем «Day17.txt». В случае наличия файла с таким именем  –  вывести сообщение;
•	открыть и прочесть файл с именем «Day17.txt». В случае отсутствия – вывести сообщение об отсутствии;
•	записать форматированную информацию в файл;Структура записываемой информации:
Исходные данные: двумерный массив дробных чисел.
                                 двумерный массив  целых чисел.
   – фамилия, имя, отчество, дата рождения
   – с новой строки  количество строк и столбцов массива дробных чисел.
   –  с новой строки  значения элементов двумерного массива (каждая строка массива в новой строке файла). 
   – с новой строки  количество строк и столбцов массива целых чисел.
   – с новой строки  двумерный массив  целых чисел, записанных в одну строку. 
–  с новой строки  текущая дата.
•	прочесть информацию из файла и преобразовать ее в соответствии с исходной структурой.
Реализовать простейшее меню.
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;


namespace Task_1
{
    class Program
    {
        //создание нового файла
        static void create_file(string s)
        {
            using (FileStream fs = File.Create(s))
            {
                Byte[] info = new UTF8Encoding(true).GetBytes("");
                //записываем первоначальную информацию
                fs.Write(info, 0, info.Length);
            }
        }

        //проверка ввода
        static int enter_value()
        {
            int i;
            do
            {
                while (!int.TryParse(Console.ReadLine(), out i)) { Console.WriteLine("Enter right value!"); }
            } while (i < 1);
            return i;
        }

        static void Main(string[] args)
        {
            string file = @"Day17.txt";
            int choice;
            int ch;

            //двумерный массив целых чисел
            int[,] arr;
            //двумерный массив дробных чисел
            double[,] arr2;

            do
            {
                Console.WriteLine("What do you want to do:");
                Console.WriteLine("1 - Create new file «Day17.txt»;");
                Console.WriteLine("2 - Open and read file «Day17.txt»;");
                Console.WriteLine("3 - Record formatted information in file «Day17.txt»;");
                Console.WriteLine("4 - Exit.");
                Console.WriteLine("Enter your choice:");
                while (!int.TryParse(Console.ReadLine(), out choice)) { Console.WriteLine("Enter right value!"); }

                switch (choice)
                {
                    case 1://создаём файл
                        try
                        {
                            //если файл уже существует - удаляем его
                            if (File.Exists(file))
                            {
                                Console.WriteLine("Filem is create already!");
                                do
                                {
                                    Console.WriteLine("1 - delete this file and create new;");
                                    Console.WriteLine("2 - continue.");
                                    Console.WriteLine("Enter your choice:");
                                    while (!int.TryParse(Console.ReadLine(), out ch)) { Console.WriteLine("Enter right value!"); }
                                } while ((ch < 1) && (ch > 2));

                                switch (ch)
                                {
                                    case 1:
                                        //удаляем существующий файл
                                        if (File.Exists(file))
                                        {
                                            File.Delete(file);
                                            //создаём новый
                                            create_file(file);
                                        }
                                        break;
                                    case 2:
                                        // ничего не делаем
                                        break;
                                }
                            }
                            else
                            {
                                //создаём новый
                                create_file(file);
                            }
                        }
                        catch (IOException exc)
                        {
                            Console.WriteLine(exc.Message + "\nError creat File");
                            return;
                        }
                        break;

                    case 2://открываем и читаем файл
                        try
                        {
                            using (StreamReader sr = File.OpenText(file))
                            {
                                string s = "";
                                Console.WriteLine("In the file now:");
                                while ((s = sr.ReadLine()) != null)
                                {
                                    Console.WriteLine(s);
                                }
                            }
                        }
                        catch (IOException exc)
                        {
                            Console.WriteLine(exc.Message);
                            return;
                        }
                        break;

                    case 3://записываем в файл
                        //фамилия, имя, отчество, дата рождения
                        string name, last_name, patronymic;
                        DateTime date_of_birth;
                        int day, mon, year;

                        Console.WriteLine("Enter name:");
                        name = Console.ReadLine();
                        Console.WriteLine("Enter last name:");
                        last_name = Console.ReadLine();
                        Console.WriteLine("Enter patronymic:");
                        patronymic = Console.ReadLine();
                        do
                        {
                            Console.WriteLine("Enter day of birth:");
                            day = enter_value();
                        } while ((day < 1) && (day > 31));
                        do
                        {
                            Console.WriteLine("Enter month of birth:");
                            mon = enter_value();
                        } while ((mon < 1) && (mon > 12));
                        do
                        {
                            Console.WriteLine("Enter year of birth:");
                            year = enter_value();
                        } while (year > 2015);

                        date_of_birth = new DateTime(year, mon, day);

                        int ah, a2h, aw, a2w;
                        //заполняем массивы
                        Console.WriteLine("Enter height of array of int:");
                        ah = enter_value();

                        Console.WriteLine("Enter width of array of int:");
                        aw = enter_value();

                        Console.WriteLine("Enter height of array of double:");
                        a2h = enter_value();

                        Console.WriteLine("Enter width of array of double:");
                        a2w = enter_value();

                        arr = new int[ah, aw];
                        arr2 = new double[a2h, a2w];


                        //заполняем массив целых чисел
                        Random r = new Random();

                        for (int i = 0; i < ah; i++)
                        {
                            for (int j = 0; j < aw; j++)
                            {
                                arr[i, j] = r.Next();
                            }
                        }

                        //заполняем массив дробных чисел
                        Random rd = new Random();

                        for (int i = 0; i < a2h; i++)
                        {
                            for (int j = 0; j < a2w; j++)
                            {
                                arr2[i, j] = rd.NextDouble();
                            }
                        }


                        using (StreamWriter sw = new StreamWriter(file, true))
                        {
                            //записываем имя и дату рождения
                            sw.Write("{0} ", name);
                            sw.Write("{0} ", last_name);
                            sw.Write("{0} ", patronymic);
                            sw.WriteLine(date_of_birth);

                            //записываем количество строк и столбцов дробного массива
                            sw.Write("{0}, {1}", a2h, a2w);
                            sw.WriteLine();
                            //записываем значения элементов дробного двумерного массива (каждая строка массива в новой строке файла).
                            for (int i = 0; i < a2h; i++)
                            {
                                for (int j = 0; j < a2w; j++)
                                {
                                    sw.Write("{0} ",arr2[i, j]);
                                }
                            }
sw.WriteLine();
                            //записываем количество строк и столбцов целого массива
                            sw.Write("{0}, {1}",ah, aw);
                            sw.WriteLine();
                            //записываем значения элементов целого двумерного массива (каждая строка массива в новой строке файла).
                            for (int i = 0; i < ah; i++)
                            {
                                for (int j = 0; j < aw; j++)
                                {
                                    sw.Write("{0} ", arr[i, j]);
                                }
                            }
sw.WriteLine();

                            //текущая дата
                            DateTime thisDay = DateTime.Today;

                            //запмсываем текущую дату
                            sw.WriteLine(thisDay);
                        }
                        break;

                    case 4://выходим из програмы
                        return;
                        break;
                }
            } while (choice != 4);
        }
    }
}







/*
 Задание 2. Приложение «Переводчик». 
Создать консольное приложение «Переводчик». 
Словарь каждого доступного для перевода языка  содержится в отдельном файле. Файл может иметь любую структуру. 
Важно только наличие возможности получить два соответствующих слова на двух языках. 
При запуске приложения, оно (приложение) должно запрашивать предоставить пользователю список доступных для перевода языков, 
количество элементов которого соответствует количеству файлов со словарями. Пользователь должен сделать выбор. 
После чего программа запрашивает у пользователя слово для перевода  и после ввода возвращает соответствующее слово на выбранном языке 
(ввод слов должен осуществляться на русском языке).  
 Необходимо обработать возможные логические аномалии, такие как: отсутствие слова в словаре, вод слова на несоответствующем языке, 
ввод посторонних символов, таких как разделители и цифровые символы и так далее. 
Хранение слов во время выполнения необходимо реализовать при помощи коллекции.
 */

*/
в проекте создала 2 файла

English.txt:
арбуз watermelon
бобёр beaver
вода water
город city
дом home
ёж hedgehog
жизнь life
зомби zombie
имя name
кот cat

Belorussian.txt:
арбуз кавун
бокал келiх
ёж вожык
жизнь жыццё
зонт парасон
имя iмя
каблук абцас
пол падлога
почка нырка
юбка спаднiца
*/

//словари маленькие для примера
//я сделала 2 словаря. По обзару и подобию можно добавлять сколько угодно файлов 

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace Task_2
{
    class Program
    {
        static void translation(ref Dictionary<string, string> dict)
        {
            int ch = 1;
            int i = 0;
            //поиск перевода
            do
            {
                Console.WriteLine("Enter word for translation:");
                string word = Console.ReadLine();

                //проверяем на ввод русских слов, а не ангийских
                if(word[0] >= 'A' && word[0] <= 'z')
                {
                    Console.WriteLine("Enter russian words");
                    return;
                }

                //проверка на ввод посторонних символов (проверяем только первый символ)
                if ((word[0] >= 33 && word[0] <=64)||(word[0] >= 91 && word[0] <= 96)||(word[0] >= 123 && word[0] <= 187))
                {
                    Console.WriteLine("Wrong symbols!");
                    return;
                }

                foreach (KeyValuePair<string, string> kvp in dict)
                {
                    if (kvp.Key == word)//если слово есть
                    {
                        Console.WriteLine(kvp.Value);
                        i++;
                        break;
                    }
                }
                if (i == 0)
                {
                    Console.WriteLine("Word not found!");
                }
                do
                {
                    Console.WriteLine("1 - continue;");
                    Console.WriteLine("0 - exit;");
                    while (!int.TryParse(Console.ReadLine(), out ch)) { Console.WriteLine("Enter right value!"); }
                } while ((ch < 0) && (ch > 1));
            } while (ch == 1);
        }
        
        static void add_in_coll(Dictionary<string, string> dict, string file)
        {
            string[] str;//массив для хранения слов
            string a, b;
            try
                        {
                            //если словарь уже заполнен
                            if(dict.Count==0)
                            {
                                //перекодируем текст, чтобы прочитать слово на русском
                                Encoding enc = Encoding.GetEncoding(1251);
                                using (StreamReader sr = new StreamReader(file, enc))
                                {
                                    //записываем слова из файла в коллекцию
                                    string s = "";
                                    while ((s = sr.ReadLine()) != null)
                                    {
                                        str = s.Split(new Char[] { ' ' });
                                        //прошла дебагером в этом месте, и всегда показывает, что
                                        // в str[0] записано слово на русском, а в str[1] - его перевод.
                                        //может, я неправильно поняла замечание?
                                        a = str[0];
                                        b = str[1];
                                        //записываем пару в коллекцию
                                        dict.Add(a, b);
                                    }
                                }
                            }
                            translation(ref dict);
                        }
            catch (IOException)
            {
                Console.WriteLine("No suitable dictionary!");
                return;
            }
        }
        
        static void Main(string[] args)
        {
            int choice;

            Dictionary<string, string> dictEn = new Dictionary<string, string>();//коллекция для хранения английских слов и их перевода
            Dictionary<string, string> dictBel = new Dictionary<string, string>();//коллекция для хранения белорусских слов и их перевода
            
            do
            {
                Console.WriteLine("What dictionary do you need?");
                Console.WriteLine("1 - English");
                Console.WriteLine("2 - Belarisian");
                Console.WriteLine("3 - if you want to exit");
                while (!int.TryParse(Console.ReadLine(), out choice)) { Console.WriteLine("Enter right value!"); }


                switch (choice)
                {
                    case 1:
                    // так старалась выносить, а это я прозевала) Так, конечно, лучше)
                        add_in_coll(dictEn, "English.txt");
                        break;

                    case 2:
                        add_in_coll(dictBel, "Belorussian.txt");
                        break;

                    case 3:
                        return;
                        break;
                }
            } while (choice != 3);
        }
    }
}
